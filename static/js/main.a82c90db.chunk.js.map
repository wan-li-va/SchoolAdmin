{"version":3,"sources":["Student.js","StudentList.js","ClassList.js","NewStudentForm.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["Student","props","editStudent","c","name","state","teacher","grade","birthday","index","setState","isEditing","student","Card","Body","this","className","type","onChange","e","target","value","max","min","Button","onClick","removeStudent","Component","StudentList","list","students","map","ClassList","NewStudentForm","handleClick","newStudent","class","key","Date","now","length","addStudent","invalidInput","teacherList","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","componentDidMount","database","once","snapshot","exists","val","newStudents","Object","keys","forEach","push","console","log","set","updatedStudents","filter","curstudent","child","remove","teachers","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a82c90db.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class Student extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.student.name,\r\n            teacher: this.props.student.teacher,\r\n            grade: this.props.student.grade,\r\n            birthday: this.props.student.birthday,\r\n            isEditing: false\r\n        }\r\n    }\r\n\r\n    editStudent = () => {\r\n        const c = {\r\n            name: this.state.name,\r\n            teacher: this.state.teacher,\r\n            grade: this.state.grade,\r\n            birthday: this.state.birthday,\r\n        }\r\n        this.props.editStudent(c, this.props.index)\r\n        this.setState({ isEditing: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Card.Body>\r\n                        {/* <Card.Text> */}\r\n                            {(this.state.isEditing) ?\r\n                                <div>\r\n                                    <div className=\"labels\">\r\n                                        <label>Name: </label>\r\n                                        <input type=\"text\" onChange={e => this.setState({ name: e.target.value })} value={this.state.name} />\r\n                                        <label>Teacher: </label>\r\n                                        <input type=\"text\" onChange={e => this.setState({ teacher: e.target.value })} value={this.state.teacher} />\r\n                                        <label>Grade: </label>\r\n                                        <input type=\"number\" max=\"6\" min=\"0\" onChange={e => this.setState({ grade: e.target.value })} value={this.state.grade} />\r\n                                        <label>Birthday: </label>\r\n                                        <input type=\"text\" onChange={e => this.setState({ birthday: e.target.value })} value={this.state.birthday} />\r\n                                    </div>\r\n                                    <Button onClick={this.editStudent}>Save Changes</Button>\r\n                                    <Button onClick={() => this.props.removeStudent(this.props.student)}>Delete Note</Button>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    <em>Name: {this.state.name}</em> <br />\r\n                                    <em>Teacher: {this.state.teacher}</em> <br />\r\n                                    <em>Grade: {this.state.grade}</em> <br />\r\n                                    <em>Birthday: {this.state.birthday}</em> <br />\r\n                                    <Button className=\"button\" onClick={() => this.setState({ isEditing: true })}>\r\n                                        Edit Student Information\r\n                                </Button> <br />\r\n                                    <Button onClick={() => this.props.removeStudent(this.props.student)}>Delete Student</Button>\r\n                                </div>\r\n                            }\r\n                        {/* </Card.Text> */}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Student from './Student.js';\r\n\r\nexport default class StudentList extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {}\r\n    }\r\n  \r\n    render() {\r\n        var list = this.props.students.map((student, index) => {\r\n            return (\r\n                <Student\r\n                    student={student} \r\n                    index={index} \r\n                    editStudent={this.props.editStudent} \r\n                    removeStudent={this.props.removeStudent} >\r\n                </Student>\r\n            )\r\n        })\r\n\r\n      return (\r\n        <div className=\"StudentList\">\r\n            {list}\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from 'react';\r\n\r\nexport default class ClassList extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {}\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class NewStudentForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          name: \"\",\r\n          class: null,\r\n          teacher: \"\",\r\n          grade: 0,\r\n          birthday: \"\",\r\n          teacherList: null,\r\n          invalidInput: \"\",\r\n      }\r\n    }\r\n\r\n    // componentDidMount = () => {\r\n    //     var numTeachers = this.props.teachers.length;\r\n    //     let teachers;\r\n    //     for(var i = numTeachers-1; i>=0; i++) {\r\n    //         teachers += (\r\n    //             <input \r\n    //                 type=\"radio\" \r\n    //                 value= {this.props.teachers[i].name}\r\n    //                 onClick={this.setClass} />\r\n    //         )\r\n    //     }\r\n    //     this.setState({ teacherList: teachers })\r\n    // }\r\n\r\n    // setClass = e => {\r\n    //     const curTeacher = this.props.teachers.filter(\r\n    //         teacher => teacher.name === e.target.value\r\n    //     )\r\n    //     this.setState({\r\n    //         teacher: e.target.value,\r\n    //         class: curTeacher[0].class,\r\n    //     })\r\n    // }\r\n\r\n    handleClick = () => {\r\n        if(this.state.name !== \"\" && this.state.teacher !== \"\") {\r\n            const newStudent = {\r\n                name: this.state.name,\r\n                class: this.state.class,\r\n                teacher: this.state.teacher,\r\n                grade: this.state.grade,\r\n                birthday: this.state.birthday,\r\n                key: Date.now(),\r\n                index: this.props.students.length,\r\n            }\r\n            this.props.addStudent(newStudent);\r\n            this.setState({\r\n                name: \"\",\r\n                class: null,\r\n                teacher: \"\",\r\n                grade: 0,\r\n                birthday: \"\",\r\n                invalidInput: \"\",\r\n            })\r\n        }\r\n        else {\r\n            this.setState({ invalidInput: \"Please enter a name and select a teacher.\" })\r\n        }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n            <p>Enroll Student</p>\r\n\r\n            <label>Name: </label>\r\n            <input type=\"text\" value={this.state.name} onChange={e => this.setState({ name: e.target.value })} />\r\n\r\n            <label>Grade: </label>\r\n            <input type=\"number\" min=\"0\" max=\"6\" onChange={e => this.setState({ grade: e.target.value })} />\r\n\r\n            <label>Birthday: </label>\r\n            <input type=\"text\" value={this.state.birthday} onChange={e => this.setState({ birthday: e.target.value })} />\r\n\r\n            <label>Teacher: </label>\r\n            <input type=\"text\" value={this.state.teacher} onChange={e => this.setState({ teacher: e.target.value })} />\r\n            {/* {this.state.teacherList} */}\r\n\r\n            <p>Your class is: {this.state.class} </p>\r\n\r\n            <Button onClick={this.handleClick}>Enroll Student</Button>\r\n            <p>{this.state.invalidInput}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }","import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCJEQn8kex17bZ74tQeXwlotFfKCXDZ52E\",\r\n    authDomain: \"schooladmin-cf6be.firebaseapp.com\",\r\n    databaseURL: \"https://schooladmin-cf6be.firebaseio.com\",\r\n    projectId: \"schooladmin-cf6be\",\r\n    storageBucket: \"schooladmin-cf6be.appspot.com\",\r\n    messagingSenderId: \"932162458992\",\r\n    appId: \"1:932162458992:web:1c5c4228781c9fbe5a6bb5\",\r\n    measurementId: \"G-21VMSZBD0P\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\nexport default firebase;","import React, { Component } from 'react';\nimport './App.css';\nimport StudentList from './StudentList.js';\nimport ClassList from './ClassList.js';\nimport NewStudentForm from './NewStudentForm.js';\nimport firebase from './firebase.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      students: [],\n      teachers: [\n        // {\n        //   name: \"Teacher 1\",\n        //   class: 1,\n        //   students: [],\n        // },\n        // {\n        //   name: \"Teacher 2\",\n        //   class: 2,\n        //   students: [],\n        // }\n      ],\n      database: firebase.database().ref(\"students\"),\n    }\n  }\n\n  componentDidMount = () => {\n    this.state.database.once(\"value\", snapshot => {\n      if (snapshot && snapshot.exists()) {\n        let students = snapshot.val();\n        const newStudents = []\n        \n        Object.keys(students).forEach(key => newStudents.push({\n          name: students[key].name,\n          class: students[key].class,\n          teacher: students[key].teacher,\n          grade: students[key].grade,\n          birthday: students[key].birthday,\n          key: students[key].key,\n          index: students[key].index\n        }),\n        console.log(students))\n        this.setState({ students: newStudents })\n      }\n    })\n  }\n\n  addStudent = student => {\n    var newStudents = [...this.state.students, student];\n    this.setState({ students: newStudents });\n    this.state.database.set(newStudents);\n  }\n\n  removeStudent = student => {\n    const updatedStudents = this.state.students.filter(\n      curstudent => curstudent.key !== student.key\n    );\n    console.log(updatedStudents)  // same problem as notes app\n    this.setState({ students: updatedStudents });\n    console.log(student.index)\n    this.state.database.child(student.index).remove();\n  }\n\n  editStudent = (student, index) => {\n    var newStudents = [...this.state.students]\n    newStudents[index] = student;\n    this.setState({ students: newStudents });\n    this.state.database.set(newStudents);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>Thomas Jefferson Elementary School</h3>\n        <h5>Dashboard</h5>\n\n        <NewStudentForm\n          students={this.state.students}\n          teachers={this.state.teachers}\n          addStudent={this.addStudent} />\n        <StudentList\n          students={this.state.students}\n          removeStudent={this.removeStudent}\n          editStudent={this.editStudent} />\n        <ClassList />\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}